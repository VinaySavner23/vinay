/*
 * NyoStore
 *
 * This is a NyoStore server. Here you can find  out all the rest api's. 
 *
 * OpenAPI spec version: 1.0.0-oas3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class BranchApiController : ControllerBase
    { 
        /// <summary>
        /// Add a new branch
        /// </summary>
        /// <param name="storeId">Store id of store to return</param>
        /// <param name="body"></param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPost]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/store/{store_id}/branch")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AddBranch")]
        [SwaggerResponse(statusCode: 200, type: typeof(Key), description: "successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult AddBranch([FromRoute][Required]string storeId, [FromBody]Body28 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Key));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"key\" : \"key\"\n  },\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Key>(exampleJson)
                        : default(Key);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete a branch
        /// </summary>
        /// <param name="storeId">Store id of store to return</param>
        /// <param name="key">Key of branch to return</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpDelete]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/store/{store_id}/branch/{key}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("DeleteBranchAddressId")]
        [SwaggerResponse(statusCode: 200, type: typeof(Success), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult DeleteBranchAddressId([FromRoute][Required]string storeId, [FromRoute][Required]string key)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Success));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Success>(exampleJson)
                        : default(Success);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete a branch schedule id
        /// </summary>
        /// <param name="storeId">Store id of store to return</param>
        /// <param name="key">Key of branch to return</param>
        /// <param name="scheduleId">Schedule id of branch to return</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpDelete]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/store/{store_id}/branch/{key}/schedule/{schedule_id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("DeleteBranchScheduleId")]
        [SwaggerResponse(statusCode: 200, type: typeof(Success), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult DeleteBranchScheduleId([FromRoute][Required]string storeId, [FromRoute][Required]string key, [FromRoute][Required]string scheduleId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Success));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Success>(exampleJson)
                        : default(Success);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get branches by address id&#x27;s
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPost]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/address-branches")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("GetBranchByAddressId")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult GetBranchByAddressId([FromBody]Body32 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse200));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"branch_id_custom\" : \"branch_id_custom\",\n    \"branch_id\" : \"branch_id\",\n    \"name\" : \"name\",\n    \"address_id\" : \"address_id\",\n    \"schedule_id\" : \"schedule_id\",\n    \"status\" : \"status\"\n  }, {\n    \"branch_id_custom\" : \"branch_id_custom\",\n    \"branch_id\" : \"branch_id\",\n    \"name\" : \"name\",\n    \"address_id\" : \"address_id\",\n    \"schedule_id\" : \"schedule_id\",\n    \"status\" : \"status\"\n  } ],\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
                        : default(InlineResponse200);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get a branch by id
        /// </summary>
        /// <param name="storeId">Store id of store to return</param>
        /// <param name="key">Key of branch to return</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpGet]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/store/{store_id}/branch/{key}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("GetBranchById")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2001), description: "successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult GetBranchById([FromRoute][Required]string storeId, [FromRoute][Required]string key)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2001));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"branch_id_custom\" : \"branch_id_custom\",\n    \"branch_id\" : \"branch_id\",\n    \"name\" : \"name\",\n    \"address_id\" : \"address_id\",\n    \"schedule_id\" : \"schedule_id\",\n    \"status\" : \"status\"\n  },\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse2001>(exampleJson)
                        : default(InlineResponse2001);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get all branches
        /// </summary>
        /// <param name="storeId">Store id of store to return</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpGet]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/store/{store_id}/branches")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("GetBranches")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult GetBranches([FromRoute][Required]string storeId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse200));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"branch_id_custom\" : \"branch_id_custom\",\n    \"branch_id\" : \"branch_id\",\n    \"name\" : \"name\",\n    \"address_id\" : \"address_id\",\n    \"schedule_id\" : \"schedule_id\",\n    \"status\" : \"status\"\n  }, {\n    \"branch_id_custom\" : \"branch_id_custom\",\n    \"branch_id\" : \"branch_id\",\n    \"name\" : \"name\",\n    \"address_id\" : \"address_id\",\n    \"schedule_id\" : \"schedule_id\",\n    \"status\" : \"status\"\n  } ],\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
                        : default(InlineResponse200);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update a branch address id
        /// </summary>
        /// <param name="storeId">Store id of store to return</param>
        /// <param name="key">Key of branch to return</param>
        /// <param name="addressId">Address id of branch to return</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPatch]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/store/{store_id}/branch/{key}/address/{address_id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("UpdateBranchAddressId")]
        [SwaggerResponse(statusCode: 200, type: typeof(Success), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult UpdateBranchAddressId([FromRoute][Required]string storeId, [FromRoute][Required]string key, [FromRoute][Required]string addressId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Success));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Success>(exampleJson)
                        : default(Success);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update a branch id
        /// </summary>
        /// <param name="storeId">Store id of store to return</param>
        /// <param name="key">Key of branch to return</param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPatch]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/store/{store_id}/branch/{key}/branch_id")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("UpdateBranchId")]
        [SwaggerResponse(statusCode: 200, type: typeof(Success), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult UpdateBranchId([FromRoute][Required]string storeId, [FromRoute][Required]string key, [FromBody]Body29 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Success));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Success>(exampleJson)
                        : default(Success);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update a branch name
        /// </summary>
        /// <param name="storeId">Store id of store to return</param>
        /// <param name="key">Key of branch to return</param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPatch]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/store/{store_id}/branch/{key}/name")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("UpdateBranchName")]
        [SwaggerResponse(statusCode: 200, type: typeof(Success), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult UpdateBranchName([FromRoute][Required]string storeId, [FromRoute][Required]string key, [FromBody]Body30 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Success));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Success>(exampleJson)
                        : default(Success);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update a branch schedule id
        /// </summary>
        /// <param name="storeId">Store id of store to return</param>
        /// <param name="key">Key of branch to return</param>
        /// <param name="scheduleId">Schedule id of branch to return</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPatch]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/store/{store_id}/branch/{key}/schedule/{schedule_id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("UpdateBranchScheduleId")]
        [SwaggerResponse(statusCode: 200, type: typeof(Success), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult UpdateBranchScheduleId([FromRoute][Required]string storeId, [FromRoute][Required]string key, [FromRoute][Required]string scheduleId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Success));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Success>(exampleJson)
                        : default(Success);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update a branch Status
        /// </summary>
        /// <param name="storeId">Store id of store to return</param>
        /// <param name="key">Key of branch to return</param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPatch]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/store/{store_id}/branch/{key}/status")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("UpdateBranchStatus")]
        [SwaggerResponse(statusCode: 200, type: typeof(Success), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult UpdateBranchStatus([FromRoute][Required]string storeId, [FromRoute][Required]string key, [FromBody]Body31 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Success));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Success>(exampleJson)
                        : default(Success);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
