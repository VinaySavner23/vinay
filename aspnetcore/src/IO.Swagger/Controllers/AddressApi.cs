/*
 * NyoStore
 *
 * This is a NyoStore server. Here you can find  out all the rest api's. 
 *
 * OpenAPI spec version: 1.0.0-oas3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AddressApiController : ControllerBase
    { 
        /// <summary>
        /// Add a new address to the store
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPost]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/address")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AddAddress")]
        [SwaggerResponse(statusCode: 200, type: typeof(Key), description: "successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult AddAddress([FromBody]Body4 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Key));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"key\" : \"key\"\n  },\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Key>(exampleJson)
                        : default(Key);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get address by key
        /// </summary>
        /// <remarks>Returns all the data of contact person</remarks>
        /// <param name="key">Key of address to return</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpGet]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/address/{key}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("GetAddressByKey")]
        [SwaggerResponse(statusCode: 200, type: typeof(AddressByKey), description: "successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult GetAddressByKey([FromRoute][Required]string key)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AddressByKey));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"zipcode\" : \"zipcode\",\n    \"country\" : \"country\",\n    \"deleted\" : false,\n    \"addr2\" : \"addr2\",\n    \"address_type\" : \"store\",\n    \"addr1\" : \"addr1\",\n    \"city\" : \"city\",\n    \"geog\" : {\n      \"crs\" : {\n        \"type\" : \"type\",\n        \"properties\" : {\n          \"name\" : \"name\"\n        }\n      },\n      \"coordinates\" : [ \"coordinates\", \"coordinates\" ],\n      \"type\" : \"type\"\n    },\n    \"address_id\" : \"address_id\",\n    \"state\" : \"state\",\n    \"contact_id\" : \"contact_id\"\n  },\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AddressByKey>(exampleJson)
                        : default(AddressByKey);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get near by address
        /// </summary>
        /// <remarks>Get near by address</remarks>
        /// <param name="latitude">Latitude of address to return</param>
        /// <param name="longitude">Longitude of address to return</param>
        /// <param name="radius">Radius of address to return</param>
        /// <param name="maxrecords">maxrecords of address to return</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpGet]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/nearby-address")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("GetNearByAddress")]
        [SwaggerResponse(statusCode: 200, type: typeof(NearbyAddress), description: "successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult GetNearByAddress([FromQuery][Required()]string latitude, [FromQuery][Required()]string longitude, [FromQuery][Required()]int? radius, [FromQuery][Required()]int? maxrecords)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(NearbyAddress));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"distance\" : 0.8008281904610115,\n    \"address_id\" : \"address_id\"\n  }, {\n    \"distance\" : 0.8008281904610115,\n    \"address_id\" : \"address_id\"\n  } ],\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<NearbyAddress>(exampleJson)
                        : default(NearbyAddress);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update first address of person by address id
        /// </summary>
        /// <remarks>Update first address</remarks>
        /// <param name="addressId">Address id of address to return</param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPatch]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/address/{address_id}/addr1")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("PatchAddressAddr1ByKey")]
        [SwaggerResponse(statusCode: 200, type: typeof(Success), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult PatchAddressAddr1ByKey([FromRoute][Required]string addressId, [FromBody]Body6 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Success));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Success>(exampleJson)
                        : default(Success);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update address person by address id
        /// </summary>
        /// <remarks>Update second address</remarks>
        /// <param name="addressId">Address id of address to return</param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPatch]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/address/{address_id}/addr2")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("PatchAddressAddr2ByKey")]
        [SwaggerResponse(statusCode: 200, type: typeof(Success), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult PatchAddressAddr2ByKey([FromRoute][Required]string addressId, [FromBody]Body7 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Success));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Success>(exampleJson)
                        : default(Success);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update city name by address id
        /// </summary>
        /// <remarks>Update city name</remarks>
        /// <param name="addressId">Address id of address to return</param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPatch]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/address/{address_id}/city")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("PatchAddressCityByKey")]
        [SwaggerResponse(statusCode: 200, type: typeof(Success), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult PatchAddressCityByKey([FromRoute][Required]string addressId, [FromBody]Body8 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Success));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Success>(exampleJson)
                        : default(Success);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update address person by address id
        /// </summary>
        /// <remarks>Update contact id</remarks>
        /// <param name="addressId">Address id of address to return</param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPatch]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/address/{address_id}/contact_id")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("PatchAddressContactIdByKey")]
        [SwaggerResponse(statusCode: 200, type: typeof(Success), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult PatchAddressContactIdByKey([FromRoute][Required]string addressId, [FromBody]Body5 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Success));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Success>(exampleJson)
                        : default(Success);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update country name by address id
        /// </summary>
        /// <remarks>Update country name</remarks>
        /// <param name="addressId">Address id of address to return</param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPatch]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/address/{address_id}/country")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("PatchAddressCountryByKey")]
        [SwaggerResponse(statusCode: 200, type: typeof(Success), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult PatchAddressCountryByKey([FromRoute][Required]string addressId, [FromBody]Body10 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Success));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Success>(exampleJson)
                        : default(Success);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update geom name by address id
        /// </summary>
        /// <remarks>Update geom name</remarks>
        /// <param name="addressId">Address id of address to return</param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPatch]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/address/{address_id}/geom")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("PatchAddressGeomByKey")]
        [SwaggerResponse(statusCode: 200, type: typeof(Success), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult PatchAddressGeomByKey([FromRoute][Required]string addressId, [FromBody]Body12 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Success));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Success>(exampleJson)
                        : default(Success);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update state name by address id
        /// </summary>
        /// <remarks>Update state name</remarks>
        /// <param name="addressId">Address id of address to return</param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPatch]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/address/{address_id}/state")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("PatchAddressStateByKey")]
        [SwaggerResponse(statusCode: 200, type: typeof(Success), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult PatchAddressStateByKey([FromRoute][Required]string addressId, [FromBody]Body9 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Success));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Success>(exampleJson)
                        : default(Success);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update zipcode name by address id
        /// </summary>
        /// <remarks>Update zipcode name</remarks>
        /// <param name="addressId">Address id of address to return</param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Invalid input</response>
        /// <response code="409">Conflict</response>
        /// <response code="5XX">Unexpected Error</response>
        [HttpPatch]
        [Route("/VinaySavner23/Nyo_Store/1.0.0-oas3/address/{address_id}/zipcode")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("PatchAddressZipcodeByKey")]
        [SwaggerResponse(statusCode: 200, type: typeof(Success), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Unauthorized), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Forbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Invalid input")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 5XX, type: typeof(Error), description: "Unexpected Error")]
        public virtual IActionResult PatchAddressZipcodeByKey([FromRoute][Required]string addressId, [FromBody]Body11 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Success));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Unauthorized));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Forbidden));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"message\",\n  \"status\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Success>(exampleJson)
                        : default(Success);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
